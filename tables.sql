CREATE TABLE PACIENS (
    TAJSZAM       CHAR(9)        NOT NULL,
    NEV           VARCHAR2(50)  NOT NULL,
    SZUL_DATUM    DATE,
    TELEFON       VARCHAR2(11),
    CIM           VARCHAR2(200),
    
    CONSTRAINT pk_paciens PRIMARY KEY (TAJSZAM),
    
    CONSTRAINT TAJSZAM_FORMAT_chk CHECK (REGEXP_LIKE(TAJSZAM, '^[0-9]{9}$')),
    CONSTRAINT patient_tel_format_chk CHECK (REGEXP_LIKE(TELEFON, '^06(20|30|70)/[0-9]{7}$'));
);

--max 99 doki
CREATE TABLE DOKTOR (
    DOKTOR_ID   NUMBER(2) NOT NULL,
    DOKTOR_NEV  VARCHAR2(50) NOT NULL,
    
    CONSTRAINT PK_DOKTOR PRIMARY KEY (DOKTOR_ID),
);

--max 99 asszisztens
CREATE TABLE ASSZISZTENS (
    ASSZISZTENS_ID NUMBER(2) NOT NULL,
    ASSZISZTENS_NEV            VARCHAR2(50)  NOT NULL,
    
    CONSTRAINT PK_ASSZISZTENS PRIMARY KEY (ASSZISZTENS_ID)
);

--max 99 szoba
CREATE TABLE SZOBA (
    SZOBA_ID   NUMBER(2)      NOT NULL,
    SZOBA_NEV        NUMBER(2)     NOT NULL, 
    CONSTRAINT PK_SZOBA PRIMARY KEY (SZOBA_ID),
    
);

--bárhány időpont, nem tudjuk melyik szobában lesznek, és ki lesz a dokisegédje.
CREATE TABLE IDOPONT (
    IDOPONT_ID      NUMBER(10)     NOT NULL,
    TAJSZAM         CHAR(9)        NOT NULL,  -- Páciens
    DOKTOR_ID       NUMBER(2)     NOT NULL,
    ASSZISZTENS_ID  NUMBER(2),    
    SZOBA_ID        NUMBER(2),     
    DATUM           DATE           NOT NULL,  -- A nap, amikor jön
    KEZDES_IDO      DATE,                    -- Pontos kezdés (dátum+idő)
    VEGE_IDO        DATE,                    -- Pontos befejezés
    MEGJEGYZES      VARCHAR2(200),           -- Pl. "első konzultáció"
    CONSTRAINT PK_IDOPONT PRIMARY KEY (IDOPONT_ID),
    -- Külső kulcsok
    CONSTRAINT FK_IDOPONT_PACIENS    FOREIGN KEY (TAJSZAM) 
        REFERENCES PACIENS(TAJSZAM),
    CONSTRAINT FK_IDOPONT_DOKTOR     FOREIGN KEY (DOKTOR_ID) 
        REFERENCES DOKTOR(DOKTOR_ID),
    CONSTRAINT FK_IDOPONT_ASSZISZTENS FOREIGN KEY (ASSZISZTENS_ID) 
        REFERENCES ASSZISZTENS(ASSZISZTENS_ID),
    CONSTRAINT FK_IDOPONT_SZOBA      FOREIGN KEY (SZOBA_ID)
        REFERENCES SZOBA(SZOBA_ID)
);

CREATE TABLE KEZELES (
    KEZELES_ID   NUMBER(10)      NOT NULL,
    IDOPONT_ID   NUMBER(10)      NOT NULL,
    KEZELES_DATUM DATE           NOT NULL,  
    STATUSZ      VARCHAR2(20)    DEFAULT 'TERVEZETT' NOT NULL
        CHECK (STATUSZ IN ('TERVEZETT','MEGJELENT','NEM_JOTT_EL')),
        
    CONSTRAINT PK_KEZELES PRIMARY KEY (KEZELES_ID),
    CONSTRAINT FK_KEZELES_IDOPONT FOREIGN KEY (IDOPONT_ID)
    REFERENCES IDOPONT(IDOPONT_ID)
);

CREATE TABLE BEAVATKOZAS (
    BEAVATKOZAS_ID   NUMBER(10)     NOT NULL,
    BEAVATKOZAS_NEVE              VARCHAR2(20)  NOT NULL, -- 20 karakterben csak elfér egy név
    ALAPDIJ          NUMBER(7),            --millioknal ugyse kerül többe
    CONSTRAINT PK_BEAVATKOZAS PRIMARY KEY (BEAVATKOZAS_ID)
);

-- Kapcsolótábla: melyik KEZELES során melyik BEAVATKOZAS történt
CREATE TABLE KEZELES_BEAVATKOZAS (
    KEZELES_ID      NUMBER(10) NOT NULL,
    BEAVATKOZAS_ID  NUMBER(10) NOT NULL,
    MENNYISEG       NUMBER(2)  DEFAULT 1, ---100 dolog nem fog történni úgysem
    CONSTRAINT PK_KEZELES_BEAVATKOZAS PRIMARY KEY (KEZELES_ID, BEAVATKOZAS_ID),
    CONSTRAINT FK_KB_KEZELES  FOREIGN KEY (KEZELES_ID)
        REFERENCES KEZELES(KEZELES_ID),
    CONSTRAINT FK_KB_BEAV     FOREIGN KEY (BEAVATKOZAS_ID)
        REFERENCES BEAVATKOZAS(BEAVATKOZAS_ID)
);

CREATE TABLE GYOGYSZER (
    GYOGYSZER_ID  NUMBER(2)     NOT NULL, --nem ismerek 100 féle fajdalomcsillapitót
    GYOGYSZER_NEV           VARCHAR2(20)  NOT NULL, -- nem tudom milyen hosszu egy gyogyszer neve 
    CONSTRAINT PK_GYOGYSZER PRIMARY KEY (GYOGYSZER_ID)
);

-- Kapcsolótábla: melyik KEZELES során melyik GYOGYSZER lett felírva
CREATE TABLE KEZELES_GYOGYSZER (
    KEZELES_ID   NUMBER(10) NOT NULL,
    GYOGYSZER_ID NUMBER(10) NOT NULL,
    MEGJEGYZES   VARCHAR2(200), -- kedvére írjon a doki amit akar úgysem fontos
    
    CONSTRAINT PK_KEZELES_GYOGYSZER PRIMARY KEY (KEZELES_ID, GYOGYSZER_ID),
    CONSTRAINT FK_KG_KEZELES FOREIGN KEY (KEZELES_ID)
        REFERENCES KEZELES(KEZELES_ID),
    CONSTRAINT FK_KG_GYOGYSZER FOREIGN KEY (GYOGYSZER_ID)
        REFERENCES GYOGYSZER(GYOGYSZER_ID)
);

CREATE TABLE SZAMLA (
    SZAMLA_ID    NUMBER(10)     NOT NULL,
    KEZELES_ID   NUMBER(10)     NOT NULL,  
    KIALLITAS_DATUM DATE        NOT NULL,  
    VEGOSSZEG    NUMBER(7)   NOT NULL,  -- több millió úgysem lesz az ára
    FIZETES_MOD  VARCHAR2(10),             -- Pl. Készpénz, bankkártya
              
    CONSTRAINT PK_SZAMLA PRIMARY KEY (SZAMLA_ID),
    CONSTRAINT FK_SZAMLA_KEZELES FOREIGN KEY (KEZELES_ID)
        REFERENCES KEZELES(KEZELES_ID)
);
