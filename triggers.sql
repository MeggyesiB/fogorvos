CREATE OR REPLACE TRIGGER TRG_DOKTOR_BI
BEFORE INSERT ON DOKTOR
FOR EACH ROW
WHEN (new.DOKTOR_ID IS NULL)
BEGIN
    SELECT SEQ_DOKTOR.NEXTVAL 
      INTO :NEW.DOKTOR_ID
      FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_ASSZISZTENS_BI
BEFORE INSERT ON ASSZISZTENS
FOR EACH ROW
WHEN (new.ASSZISZTENS_ID IS NULL)
BEGIN
    SELECT SEQ_ASSZISZTENS.NEXTVAL
      INTO :NEW.ASSZISZTENS_ID
      FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_SZOBA_BI
BEFORE INSERT ON SZOBA
FOR EACH ROW
WHEN (new.SZOBA_ID IS NULL)
BEGIN
    SELECT SEQ_SZOBA.NEXTVAL
      INTO :NEW.SZOBA_ID
      FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_IDOPONT_BI
BEFORE INSERT ON IDOPONT
FOR EACH ROW
WHEN (new.IDOPONT_ID IS NULL)
BEGIN
    SELECT SEQ_IDOPONT.NEXTVAL
      INTO :NEW.IDOPONT_ID
      FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_KEZELES_BI
BEFORE INSERT ON KEZELES
FOR EACH ROW
WHEN (new.KEZELES_ID IS NULL)
BEGIN
    SELECT SEQ_KEZELES.NEXTVAL
      INTO :NEW.KEZELES_ID
      FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_BEAVATKOZAS_BI
BEFORE INSERT ON BEAVATKOZAS
FOR EACH ROW
WHEN (new.BEAVATKOZAS_ID IS NULL)
BEGIN
    SELECT SEQ_BEAVATKOZAS.NEXTVAL
      INTO :NEW.BEAVATKOZAS_ID
      FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_GYOGYSZER_BI
BEFORE INSERT ON GYOGYSZER
FOR EACH ROW
WHEN (new.GYOGYSZER_ID IS NULL)
BEGIN
    SELECT SEQ_GYOGYSZER.NEXTVAL
      INTO :NEW.GYOGYSZER_ID
      FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_SZAMLA_BI
BEFORE INSERT ON SZAMLA
FOR EACH ROW
WHEN (new.SZAMLA_ID IS NULL)
BEGIN
    SELECT SEQ_SZAMLA.NEXTVAL
      INTO :NEW.SZAMLA_ID
      FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_MUSZAK_BI
BEFORE INSERT ON MUSZAK
FOR EACH ROW
WHEN (NEW.MUSZAK_ID IS NULL)
BEGIN
    SELECT SEQ_MUSZAK.NEXTVAL
      INTO :NEW.MUSZAK_ID
      FROM DUAL;
END;
